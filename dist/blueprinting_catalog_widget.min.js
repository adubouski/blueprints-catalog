"use strict";!function(){var a=angular.module("blueprintingCatalogWidget",[]),b="BLUEPRINTING CATALOG WIDGET",c="unexpected error occurred",d="https://api.github.com",e="/search/repositories?q=*-example+user:cloudify-examples",f="master";a.directive("blueprintingCatalog",["Github","CloudifyManager","CatalogHelper","$q","$log",function(a,c,d,g,h){return{restrict:"A",scope:{githubQuery:"@catalogGithubQuery",listTitle:"@catalogListTitle",listDescription:"@catalogListDescription",blueprintsEndpoint:"@catalogDefaultManager",defaultVersion:"@catalogDefaultVersion"},templateUrl:"blueprinting_catalog_widget_tpl.html",link:function(i){i.githubQuery&&(e=i.githubQuery,h.debug(b,"default search query was overridden with",e)),i.defaultVersion&&(f=i.defaultVersion),i.blueprintsEndpoint=i.blueprintsEndpoint||"",i.loading=!0,a.getRepositories().then(function(a){h.debug(b,"fetched repos",a),i.repos=a.data&&a.data.items||[]})["finally"](function(){i.loading=!1}),i.showDetails=function(a){h.debug(b,"show details",a),g.when(d.fillVersions(a),function(){d.fillReadme(a)}),i.currentRepo=a},i.changeVersion=function(a){i.currentRepo.currentVersion=a,d.fillReadme(i.currentRepo)},i.showList=function(){i.currentRepo=void 0},i.showUpload=function(a){h.debug(b,"show upload",a),d.fillVersions(a),i.managerEndpoint=i.blueprintsEndpoint,i.blueprint={path:"blueprint.yaml",id:a.name,url:a.html_url+"/archive/"+a.currentVersion+".zip"},i.uploadRepo=a},i.closeUpload=function(){i.error=void 0,i.uploadRepo=void 0},i.uploadBlueprint=function(){h.debug(b,"do upload"),i.blueprintForm.$valid&&(i.processing=!0,i.error=void 0,c.upload(i.managerEndpoint,i.blueprint).then(function(){i.uploadRepo=void 0},function(a){i.error=d.getErrorFromResponse(a)})["finally"](function(){i.processing=!1}))}}}}]),a.factory("CatalogHelper",["Github","$q","$sce",function(a,b,d){return{fillVersions:function(c){if(!c.versionsList){var d=c.versionsList=[],e=a.getTags(c.url),g=a.getBranches(c.url);return b.all([g,e]).then(function(a){d=d.concat(a[0].data||[]).concat(a[1].data||[]);for(var b,e=0,g=d.length;g>e;e++)if(b=d[e],b.name===f){c.defaultVersion=f;break}c.defaultVersion||(c.defaultVersion=c.default_branch),c.currentVersion=c.defaultVersion,c.versionsList=d})}},fillReadme:function(b){b.readmeContents=b.readmeContents||{},b.readmeContents[b.currentVersion]||a.getReadme(b.url,b.currentVersion).then(function(a){b.readmeContents[b.currentVersion]=d.trustAsHtml(a.data||"No Readme File")},function(){b.readmeContents[b.currentVersion]=d.trustAsHtml("No Readme File")})},getErrorFromResponse:function(a){return a&&a.data?"string"==typeof a.data?a.data:a.data.message||c:c}}}]),a.factory("Github",["$http",function(a){return{getRepositories:function(){return a({method:"GET",url:d+e})},getTags:function(b){return a({method:"GET",url:b+"/tags"})},getBranches:function(b){return a({method:"GET",url:b+"/branches"})},getReadme:function(b,c){return a({method:"GET",url:b+"/readme"+(c?"?ref="+encodeURIComponent(c):""),headers:{Accept:"application/vnd.github.html+json"}})}}}]),a.factory("CloudifyManager",["$http",function(a){return{upload:function(b,c){var d,e=[];return c.path&&e.push("application_file_name="+encodeURIComponent(c.path)),c.url&&e.push("blueprint_archive_url="+encodeURIComponent(c.url)),d=e.length?"?"+e.join("&"):"",a({method:"PUT",url:b+"/blueprints/"+encodeURIComponent(c.id)+d})}}}])}(),angular.module("blueprintingCatalogWidget").run(["$templateCache",function(a){a.put("blueprinting_catalog_widget_tpl.html",'<section class="bl-catalog"> <div ng-show="!currentRepo"> <div> <h1>{{::listTitle}}</h1> <p>{{::listDescription}}</p> </div> <div> <table> <thead> <tr> <th>Name</th> <th>Description</th> <th>Source</th> <th>Action</th> </tr> </thead> <tr ng-show="!loading && !repos.length"> <td colspan="4">No Data Found</td> </tr> <tr ng-show="loading"> <td colspan="4">Loading...</td> </tr> <tr ng-repeat="repo in repos"> <td> <a href ng-click="showDetails(repo);">{{::repo.name}}</a> </td> <td> {{::repo.description}} </td> <td> <a href="{{::repo.html_url}}" target="_tab_{{::repo.id}}">Source</a> </td> <td> <a href ng-click="showUpload(repo);">Upload to Manager</a> </td> </tr> </table> </div> </div> <div ng-show="currentRepo"> <div> <h1> <a href ng-click="showList();" class="to-list"></a> {{currentRepo.name}} </h1> <ul class="action-links"> <li><a href="{{currentRepo.html_url}}/tree/{{currentRepo.currentVersion}}" target="_tab_{{currentRepo.id}}">Source</a></li> <li><a href="{{currentRepo.html_url}}/archive/{{currentRepo.currentVersion}}.zip">Download</a></li> <li><a href ng-click="showUpload(currentRepo);">Upload to Manager</a></li> </ul> <div class="versions-list"> <label>Branches & Tags:</label> <ul> <li ng-repeat="v in currentRepo.versionsList" ng-switch="v.name === currentRepo.currentVersion"> <span ng-switch-when="true" class="label">{{v.name}}</span> <a ng-click="changeVersion(v.name);" href ng-switch-when="false" class="label">{{v.name}}</a> </li> </ul> </div> </div> <section> <hr> <div ng-bind-html="currentRepo.readmeContents[currentRepo.currentVersion]"></div> </section> </div> <div ng-show="uploadRepo" class="modal-backdrop"></div> <div class="modal" ng-show="uploadRepo"> <div class="modal-dialog"> <div class="modal-content no-header"> <div class="modal-body"> <form novalidate name="blueprintForm"> <label> Blueprint Name<br> <input type="text" ng-model="blueprint.id" placeholder="enter blueprint name" required> </label> <label> Manager Endpoint URL<br> <input type="url" ng-model="managerEndpoint" placeholder="enter manager url" required> </label> <label> Blueprint File Name<br> <input type="text" ng-model="blueprint.path" placeholder="enter blueprint file name" required> </label> <label> Source<br> <select ng-model="blueprint.url"> <option ng-repeat="v in uploadRepo.versionsList" value="{{uploadRepo.html_url}}/archive/{{v.name}}.zip" ng-selected="b.name === uploadRepo.currentVersion"> {{v.name}} </option> </select> </label> <div class="alert alert-danger" ng-show="error">{{error}}</div> </form> <div class="modal-buttons"> <button class="btn btn-default" ng-disabled="processing" ng-click="closeUpload();">Cancel</button> <button class="btn btn-primary" ng-disabled="processing || blueprintForm.$invalid" ng-click="uploadBlueprint();"> <span ng-show="processing">Uploading...</span> <span ng-hide="processing">Upload</span> </button> </div> </div> </div> </div> </div> </section>')}]);