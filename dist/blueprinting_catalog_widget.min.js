"use strict";!function(){var a=angular.module("blueprintingCatalogWidget",[]),b="BLUEPRINTING CATALOG WIDGET",c="unexpected error occurred",d="https://api.github.com",e="/search/repositories?q=*-example+user:cloudify-examples",f="";a.directive("blueprintingCatalog",["Github","CloudifyManager","CatalogHelper","$log",function(a,c,d,g){return{restrict:"A",scope:{githubQuery:"@catalogGithubQuery",listTitle:"@catalogListTitle",listDescription:"@catalogListDescription",blueprintsEndpoint:"@catalogDefaultManager"},templateUrl:"blueprinting_catalog_widget_tpl.html",link:function(h){h.githubQuery&&(e=h.githubQuery,g.debug(b,"default search query was overridden with",e)),h.blueprintsEndpoint&&(f=h.blueprintsEndpoint,g.debug(b,"default manager endpoint was overridden with",f)),h.loading=!0,a.getRepositories().then(function(a){g.debug(b,"fetched repos",a),h.repos=a.data&&a.data.items||[]})["finally"](function(){h.loading=!1}),h.showDetails=function(a){g.debug(b,"show details",a),d.fillTags(a),d.fillReadme(a),h.currentRepo=a},h.showList=function(){h.currentRepo=void 0},h.showUpload=function(a){g.debug(b,"show upload",a),d.fillTags(a),d.fillBranches(a),h.managerEndpoint=f,h.blueprint={path:"blueprint.yaml",id:a.name,url:a.html_url+"/archive/"+a.default_branch+".zip"},h.uploadRepo=a},h.closeUpload=function(){h.uploadRepo=void 0},h.uploadBlueprint=function(){g.debug(b,"do upload"),h.blueprintForm.$valid&&(h.processing=!0,h.error=void 0,c.upload(h.managerEndpoint,h.blueprint).then(function(){h.uploadRepo=void 0},function(a){h.error=d.getErrorFromResponse(a)})["finally"](function(){h.processing=!1}))}}}}]),a.factory("CatalogHelper",["Github","$sce",function(a,b){return{fillTags:function(b){b.tagsList||a.getTags(b.url).then(function(a){b.tagsList=a.data||[]},function(){b.tagsList=[]})},fillBranches:function(b){b.branchesList||a.getBranches(b.url).then(function(a){b.branchesList=a.data||[]},function(){b.branchesList=[]})},fillReadme:function(c){c.readmeContent||a.getReadme(c.url).then(function(a){c.readmeContent=b.trustAsHtml(a.data||"No Readme File")},function(){c.readmeContent=b.trustAsHtml("No Readme File")})},getErrorFromResponse:function(a){return a&&a.data?"string"==typeof a.data?a.data:a.data.message||c:c}}}]),a.factory("Github",["$http",function(a){return{getRepositories:function(){return a({method:"GET",url:d+e})},getTags:function(b){return a({method:"GET",url:b+"/tags"})},getBranches:function(b){return a({method:"GET",url:b+"/branches"})},getReadme:function(b){return a({method:"GET",url:b+"/readme",headers:{Accept:"application/vnd.github.html+json"}})}}}]),a.factory("CloudifyManager",["$http",function(a){return{upload:function(b,c){var d,e=[];return c.path&&e.push("application_file_name="+encodeURIComponent(c.path)),c.url&&e.push("blueprint_archive_url="+encodeURIComponent(c.url)),d=e.length?"?"+e.join("&"):"",a({method:"PUT",url:b+"/blueprints/"+encodeURIComponent(c.id)+d})}}}])}(),angular.module("blueprintingCatalogWidget").run(["$templateCache",function(a){a.put("blueprinting_catalog_widget_tpl.html",'<section class="bl-catalog"> <div ng-show="!currentRepo"> <div> <h1>{{::listTitle}}</h1> <p>{{::listDescription}}</p> </div> <div> <table> <thead> <tr> <th>Name</th> <th>Description</th> <th>Source</th> <th>Action</th> </tr> </thead> <tr ng-show="!loading && !repos.length"> <td colspan="4">No Data Found</td> </tr> <tr ng-show="loading"> <td colspan="4">Loading...</td> </tr> <tr ng-repeat="repo in repos"> <td> <a href ng-click="showDetails(repo);">{{::repo.name}}</a> </td> <td> {{::repo.description}} </td> <td> <a href="{{::repo.html_url}}" target="_tab_{{::repo.id}}">Source</a> </td> <td> <a href ng-click="showUpload(repo);">Upload to Manager</a> </td> </tr> </table> </div> </div> <div ng-show="currentRepo"> <div> <a href ng-click="showList();" class="to-list">Back</a> <h1>{{currentRepo.name}}</h1> <ul class="action-links"> <li><a href="{{currentRepo.html_url}}" target="_tab_{{currentRepo.id}}">Source</a></li> <li><a href="{{currentRepo.html_url}}/archive/{{currentRepo.default_branch}}.zip">Download</a></li> <li><a href ng-click="showUpload(currentRepo);">Upload to Manager</a></li> </ul> </div> <section> <div> README <hr> </div> <div ng-bind-html="currentRepo.readmeContent"></div> </section> <section> <label>Available Tags:</label> <ul> <li ng-show="!currentRepo.tagsList.length">(None)</li> <li ng-repeat="tag in currentRepo.tagsList"> <span class="label">{{tag.name}}</span> </li> </ul> </section> </div> <div ng-show="uploadRepo" class="upload-backdrop"></div> <div ng-show="uploadRepo" class="upload-popup"> <div class="upload-content"> <div class="upload-header"> <a href ng-click="closeUpload();" class="close-popup">&times;</a> </div> <div class="upload-content"> <form novalidate name="blueprintForm"> <label> Blueprint Name<br> <input type="text" ng-model="blueprint.id" placeholder="enter blueprint name" required> </label> <label> Manager Endpoint URL<br> <input type="text" ng-model="managerEndpoint" placeholder="enter manager url" required> </label> <label> Blueprint File Name<br> <input type="text" ng-model="blueprint.path" placeholder="enter blueprint file name" required> </label> <label> Source<br> <select ng-model="blueprint.url"> <optgroup label="Branches"> <option ng-repeat="b in uploadRepo.branchesList" value="{{uploadRepo.html_url}}/archive/{{b.name}}.zip" ng-selected="b.name === uploadRepo.default_branch"> {{b.name}} </option> </optgroup> <optgroup label="Tags"> <option ng-repeat="tag in uploadRepo.tagsList" value="{{uploadRepo.html_url}}/archive/{{tag.name}}.zip"> {{tag.name}} </option> </optgroup> </select> </label> <div class="alert alert-error">{{error}}</div> </form> </div> <div class="upload-buttons"> <button class="btn btn-default" ng-disabled="processing" ng-click="closeUpload();">Cancel</button> <button class="btn btn-primary" ng-disabled="processing || blueprintForm.$invalid" ng-click="uploadBlueprint();"> <span ng-show="processing">Uploading...</span> <span ng-hide="processing">Upload</span> </button> </div> </div> </div> </section>')}]);